syntax = "proto3";

package helai_api_core_service;

import "companies_services.proto";
import "projects_services.proto";

// Service handling user-related operations
service UserService {
  // Authenticate a user using login credentials.
  // Returns tokens, user details, and one company with its projects.
  rpc AuthenticateWithPassword(AuthenticateWithPasswordRequest)
      returns (AuthUserCompanyProjectsInfoResponse) {}

  // Authenticate a user with a token from the header, optionally for a default
  // company. Returns user details and one company with its projects.
  rpc GetUserData(GetUserDataRequest)
      returns (UserCompanyProjectsInfoResponse) {}

  // Register a new user with login credentials and email; returns user details.
  rpc RegisterUser(RegisterUserRequest) returns (NewUserResponse) {}

  // Refresh the session token using a refresh token; returns updated user
  // details.
  rpc RefreshSessionToken(RefreshSessionTokenRequest) returns (TokenResponse) {}
}

// Request message for authentication using login credentials
message AuthenticateWithPasswordRequest {
  string login = 1;    // User's login or username
  string password = 2; // User's password
}

// Request message for user registration
message RegisterUserRequest {
  string login = 1;     // Desired login for the new user
  string user_name = 2; // Desired username for the new user
  string password = 3;  // Password for the new user
  string email = 4;     // Email address of the new user
}

// Request message to refresh the session token
message RefreshSessionTokenRequest {
  string refresh_token = 1; // Token used to renew the session
}

// Request message to retrieve user data with optional default company selection
message GetUserDataRequest {
  optional int32 company_id = 1; // Unique identifier for the company (optional)
}

// Response message containing user details and tokens after authentication
message AuthUserCompanyProjectsInfoResponse {
  int32 user_id = 1;        // Unique identifier for the user
  string email = 2;         // Email of the user
  string user_name = 3;     // Primary name of the user
  string login = 4;         // User login
  string session_token = 5; // Session token for authenticated access
  string refresh_token = 6; // Refresh token for session renewal
  optional CompanyInfoResponse company =
      7; // Information about the default company
  repeated ProjectsResponse user_projects =
      8; // List of projects associated with the user
}

// Response message containing user details and tokens for default company
// access
message UserCompanyProjectsInfoResponse {
  int32 user_id = 1;    // Unique identifier for the user
  string email = 2;     // Email of the user
  string user_name = 3; // Primary name of the user
  string login = 4;     // User login
  optional CompanyInfoResponse company =
      5; // Information about the default company
  repeated ProjectsResponse user_projects =
      6; // List of projects associated with the user
}

// Response message containing new user details after registration
message NewUserResponse {
  int32 user_id = 1;        // Unique identifier for the new user
  string email = 2;         // Email of the user
  string user_name = 3;     // Primary name of the user
  string login = 4;         // User login
  string session_token = 5; // Session token for authenticated access
  string refresh_token = 6; // Refresh token for session renewal
}

// Response message containing only a new session token
message TokenResponse {
  string session_token = 1; // New session token for authenticated access
}

// Response message providing brief information about a user
message UserShortInfoResponse {
  int32 user_id = 1;    // Unique identifier of the user
  string user_name = 2; // Display name or username of the user
}
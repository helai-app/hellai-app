syntax = "proto3";

package helai_api_core_service;

import "default_service.proto";

// Service handling task-related operations
service TasksService {

  // RPC for creating a new task
  rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse) {}

  // RPC for adding a user to a task
  rpc AddUserToTask(UserTaskModificationRequest)
      returns (TaskUserInfoResponse) {}

  // RPC for removing a user from a task
  rpc RemoveUserFromTask(UserTaskModificationRequest) returns (StatusResponse) {
  }

  // RPC for deleting a task
  rpc DeleteTask(DeleteTaskRequest) returns (StatusResponse) {}

  // RPC for get company projects by company id
  rpc GetAllProjectTasks(GetAllProjectTasksRequest)
      returns (GetAllProjectTasksResponse) {}
}

// Request message for creating a new task
message CreateTaskRequest {
  int32 project_id = 1;   // ID of the associated project
  string title = 2;       // Title of the task
  string description = 3; // Description of the task
}

// Response message after creating a new task
message CreateTaskResponse {
  int32 task_id = 1;      // Unique identifier of the created task
  int32 project_id = 2;   // ID of the associated project
  string title = 3;       // Title of the task
  string description = 4; // Description of the task
}

// Request message for modifying user-task relationships
message UserTaskModificationRequest {
  int32 user_id = 1; // Unique identifier of the user
  int32 task_id = 2; // Unique identifier of the task
}

// Response message providing user information within a task
message TaskUserInfoResponse {
  int32 user_id = 1;         // Unique identifier of the user
  ProjectRole user_role = 2; // Role of the user in the task
}

// Request message for deleting a task
message DeleteTaskRequest {
  int32 task_id = 1; // Unique identifier of the task to be deleted
}

// Response message providing information about a task within a project
message TaskResponse {
  int32 task_id = 1;    // Unique identifier of the task
  int32 project_id = 2; // Identifier of the project to which the task belongs
  AssignedUserInfo assigned_to =
      3; // Name or identifier of the user assigned to the task
  TaskStatusType status = 4; // Current status of the task
  string title = 5;          // Title or short description of the task
  string description = 6;    // Detailed description of the task
  string priority = 7;   // Priority level of the task (e.g., High, Medium, Low)
  string created_at = 8; // Timestamp indicating when the task was created
  string due_date = 9;   // Due date for the task
}

// Request message for retrieving all tasks associated with a specific project
message GetAllProjectTasksRequest {
  int32 project_id = 1; // Identifier of the project for which to retrieve tasks
}

// Response message containing all tasks associated with a specific project
message GetAllProjectTasksResponse { repeated TaskResponse tasks = 1; }

message AssignedUserInfo {
  int32 id = 1;
  string name = 2;
}